.TH "robin_hood::detail::Table< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >" 3 "Tue Apr 20 2021" "Version 2.0" "LRez" \" -*- nroff -*-
.ad l
.nh
.SH NAME
robin_hood::detail::Table< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <robin_hood\&.h>\fP
.PP
Inherits \fBrobin_hood::detail::WrapHash< Hash >\fP, \fBrobin_hood::detail::WrapKeyEqual< KeyEqual >\fP, and \fBrobin_hood::detail::NodeAllocator< std::conditional< std::is_void< T >::value, Key, robin_hood::pair< std::conditional< IsFlat, Key, Key const >::type, T > >::type, 4, 16384, IsFlat >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "using \fBkey_type\fP = Key"
.br
.ti -1c
.RI "using \fBmapped_type\fP = T"
.br
.ti -1c
.RI "using \fBvalue_type\fP = typename std::conditional< \fBis_set\fP, Key, \fBrobin_hood::pair\fP< typename std::conditional< \fBis_flat\fP, Key, Key const  >::type, T > >::type"
.br
.ti -1c
.RI "using \fBsize_type\fP = size_t"
.br
.ti -1c
.RI "using \fBhasher\fP = Hash"
.br
.ti -1c
.RI "using \fBkey_equal\fP = KeyEqual"
.br
.ti -1c
.RI "using \fBSelf\fP = \fBTable\fP< IsFlat, MaxLoadFactor100, \fBkey_type\fP, \fBmapped_type\fP, \fBhasher\fP, \fBkey_equal\fP >"
.br
.ti -1c
.RI "using \fBiterator\fP = Iter< false >"
.br
.ti -1c
.RI "using \fBconst_iterator\fP = Iter< true >"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTable\fP (size_t \fBROBIN_HOOD_UNUSED\fP(bucket_count)=0, const Hash &h=Hash{}, const KeyEqual &equal=KeyEqual{}) noexcept(noexcept(Hash(h)) &&noexcept(KeyEqual(equal)))"
.br
.ti -1c
.RI "template<typename Iter > \fBTable\fP (Iter first, Iter last, size_t \fBROBIN_HOOD_UNUSED\fP(bucket_count)=0, const Hash &h=Hash{}, const KeyEqual &equal=KeyEqual{})"
.br
.ti -1c
.RI "\fBTable\fP (std::initializer_list< \fBvalue_type\fP > initlist, size_t \fBROBIN_HOOD_UNUSED\fP(bucket_count)=0, const Hash &h=Hash{}, const KeyEqual &equal=KeyEqual{})"
.br
.ti -1c
.RI "\fBTable\fP (\fBTable\fP &&o) noexcept"
.br
.ti -1c
.RI "\fBTable\fP & \fBoperator=\fP (\fBTable\fP &&o) noexcept"
.br
.ti -1c
.RI "\fBTable\fP (const \fBTable\fP &o)"
.br
.ti -1c
.RI "\fBTable\fP & \fBoperator=\fP (\fBTable\fP const &o)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBTable\fP &o)"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "\fB~Table\fP ()"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBTable\fP &other) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBTable\fP &other) const"
.br
.ti -1c
.RI "template<typename Q  = mapped_type> std::enable_if<!std::is_void< Q >::value, Q & >::type \fBoperator[]\fP (const \fBkey_type\fP &key)"
.br
.ti -1c
.RI "template<typename Q  = mapped_type> std::enable_if<!std::is_void< Q >::value, Q & >::type \fBoperator[]\fP (\fBkey_type\fP &&key)"
.br
.ti -1c
.RI "template<typename Iter > void \fBinsert\fP (Iter first, Iter last)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. Args> std::pair< \fBiterator\fP, bool > \fBemplace\fP (Args &&\&.\&.\&. args)"
.br
.ti -1c
.RI "std::pair< \fBiterator\fP, bool > \fBinsert\fP (const \fBvalue_type\fP &keyval)"
.br
.ti -1c
.RI "std::pair< \fBiterator\fP, bool > \fBinsert\fP (\fBvalue_type\fP &&keyval)"
.br
.ti -1c
.RI "size_t \fBcount\fP (const \fBkey_type\fP &key) const"
.br
.ti -1c
.RI "template<typename OtherKey , typename Self_  = Self> std::enable_if< Self_::is_transparent, size_t >::type \fBcount\fP (const OtherKey &key) const"
.br
.ti -1c
.RI "bool \fBcontains\fP (const \fBkey_type\fP &key) const"
.br
.ti -1c
.RI "template<typename OtherKey , typename Self_  = Self> std::enable_if< Self_::is_transparent, bool >::type \fBcontains\fP (const OtherKey &key) const"
.br
.ti -1c
.RI "template<typename Q  = mapped_type> std::enable_if<!std::is_void< Q >::value, Q & >::type \fBat\fP (\fBkey_type\fP const &key)"
.br
.ti -1c
.RI "template<typename Q  = mapped_type> std::enable_if<!std::is_void< Q >::value, Q const  & >::type \fBat\fP (\fBkey_type\fP const &key) const"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBfind\fP (const \fBkey_type\fP &key) const"
.br
.ti -1c
.RI "template<typename OtherKey > \fBconst_iterator\fP \fBfind\fP (const OtherKey &key, \fBis_transparent_tag\fP) const"
.br
.ti -1c
.RI "template<typename OtherKey , typename Self_  = Self> std::enable_if< Self_::is_transparent, \fBconst_iterator\fP >::type \fBfind\fP (const OtherKey &key) const"
.br
.ti -1c
.RI "\fBiterator\fP \fBfind\fP (const \fBkey_type\fP &key)"
.br
.ti -1c
.RI "template<typename OtherKey > \fBiterator\fP \fBfind\fP (const OtherKey &key, \fBis_transparent_tag\fP)"
.br
.ti -1c
.RI "template<typename OtherKey , typename Self_  = Self> std::enable_if< Self_::is_transparent, \fBiterator\fP >::type \fBfind\fP (const OtherKey &key)"
.br
.ti -1c
.RI "\fBiterator\fP \fBbegin\fP ()"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBbegin\fP () const"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBcbegin\fP () const"
.br
.ti -1c
.RI "\fBiterator\fP \fBend\fP ()"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBend\fP () const"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBcend\fP () const"
.br
.ti -1c
.RI "\fBiterator\fP \fBerase\fP (\fBconst_iterator\fP pos)"
.br
.ti -1c
.RI "\fBiterator\fP \fBerase\fP (\fBiterator\fP pos)"
.br
.ti -1c
.RI "size_t \fBerase\fP (const \fBkey_type\fP &key)"
.br
.ti -1c
.RI "void \fBrehash\fP (size_t c)"
.br
.ti -1c
.RI "void \fBreserve\fP (size_t c)"
.br
.ti -1c
.RI "\fBsize_type\fP \fBsize\fP () const noexcept"
.br
.ti -1c
.RI "\fBsize_type\fP \fBmax_size\fP () const noexcept"
.br
.ti -1c
.RI "\fBROBIN_HOOD\fP (NODISCARD) bool empty() const noexcept"
.br
.ti -1c
.RI "float \fBmax_load_factor\fP () const noexcept"
.br
.ti -1c
.RI "float \fBload_factor\fP () const noexcept"
.br
.ti -1c
.RI "\fBROBIN_HOOD\fP (NODISCARD) size_t mask() const noexcept"
.br
.ti -1c
.RI "\fBROBIN_HOOD\fP (NODISCARD) size_t calcMaxNumElementsAllowed(size_t maxElements) const noexcept"
.br
.ti -1c
.RI "\fBROBIN_HOOD\fP (NODISCARD) size_t calcNumBytesInfo(size_t numElements) const noexcept"
.br
.ti -1c
.RI "size_t \fBcalcNumElementsWithBuffer\fP (size_t numElements) const noexcept"
.br
.ti -1c
.RI "\fBROBIN_HOOD\fP (NODISCARD) size_t calcNumBytesTotal(size_t numElements) const"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr bool \fBis_flat\fP = IsFlat"
.br
.ti -1c
.RI "static constexpr bool \fBis_map\fP = !std::is_void<T>::value"
.br
.ti -1c
.RI "static constexpr bool \fBis_set\fP = !\fBis_map\fP"
.br
.ti -1c
.RI "static constexpr bool \fBis_transparent\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key, typename T, typename Hash, typename KeyEqual>
.br
class robin_hood::detail::Table< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >"

.PP
Definition at line 879 of file robin_hood\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > using \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBconst_iterator\fP =  Iter<true>"

.PP
Definition at line 1446 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > using \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBhasher\fP =  Hash"

.PP
Definition at line 900 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > using \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBiterator\fP =  Iter<false>"

.PP
Definition at line 1445 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > using \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBkey_equal\fP =  KeyEqual"

.PP
Definition at line 901 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > using \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBkey_type\fP =  Key"

.PP
Definition at line 894 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > using \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBmapped_type\fP =  T"

.PP
Definition at line 895 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > using \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBSelf\fP =  \fBTable\fP<IsFlat, MaxLoadFactor100, \fBkey_type\fP, \fBmapped_type\fP, \fBhasher\fP, \fBkey_equal\fP>"

.PP
Definition at line 902 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > using \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBsize_type\fP =  size_t"

.PP
Definition at line 899 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > using \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBvalue_type\fP =  typename std::conditional< \fBis_set\fP, Key, \fBrobin_hood::pair\fP<typename std::conditional<\fBis_flat\fP, Key, Key const>::type, T> >::type"

.PP
Definition at line 898 of file robin_hood\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBTable\fP (size_t  ROBIN_HOOD_UNUSEDbucket_count = \fC0\fP, const Hash & h = \fCHash{}\fP, const KeyEqual & equal = \fCKeyEqual{}\fP)\fC [inline]\fP, \fC [explicit]\fP, \fC [noexcept]\fP"

.PP
Definition at line 1453 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename Iter > \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBTable\fP (Iter first, Iter last, size_t  ROBIN_HOOD_UNUSEDbucket_count = \fC0\fP, const Hash & h = \fCHash{}\fP, const KeyEqual & equal = \fCKeyEqual{}\fP)\fC [inline]\fP"

.PP
Definition at line 1462 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBTable\fP (std::initializer_list< \fBvalue_type\fP > initlist, size_t  ROBIN_HOOD_UNUSEDbucket_count = \fC0\fP, const Hash & h = \fCHash{}\fP, const KeyEqual & equal = \fCKeyEqual{}\fP)\fC [inline]\fP"

.PP
Definition at line 1470 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBTable\fP (\fBTable\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual > && o)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 1479 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::\fBTable\fP (const \fBTable\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual > & o)\fC [inline]\fP"

.PP
Definition at line 1524 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::~\fBTable\fP ()\fC [inline]\fP"

.PP
Definition at line 1636 of file robin_hood\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename Q  = mapped_type> std::enable_if<!std::is_void<Q>::value, Q&>::type \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::at (\fBkey_type\fP const & key)\fC [inline]\fP"

.PP
Definition at line 1738 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename Q  = mapped_type> std::enable_if<!std::is_void<Q>::value, Q const&>::type \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::at (\fBkey_type\fP const & key) const\fC [inline]\fP"

.PP
Definition at line 1751 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBiterator\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::begin ()\fC [inline]\fP"

.PP
Definition at line 1802 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBconst_iterator\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::begin () const\fC [inline]\fP"

.PP
Definition at line 1809 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > size_t \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::calcNumElementsWithBuffer (size_t numElements) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 1950 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBconst_iterator\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::cbegin () const\fC [inline]\fP"

.PP
Definition at line 1813 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBconst_iterator\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::cend () const\fC [inline]\fP"

.PP
Definition at line 1831 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > void \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::clear ()\fC [inline]\fP"

.PP
Definition at line 1615 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > bool \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::contains (const \fBkey_type\fP & key) const\fC [inline]\fP"

.PP
Definition at line 1724 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename OtherKey , typename Self_  = Self> std::enable_if<Self_::is_transparent, bool>::type \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::contains (const OtherKey & key) const\fC [inline]\fP"

.PP
Definition at line 1730 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > size_t \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::count (const \fBkey_type\fP & key) const\fC [inline]\fP"

.PP
Definition at line 1704 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename OtherKey , typename Self_  = Self> std::enable_if<Self_::is_transparent, size_t>::type \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::count (const OtherKey & key) const\fC [inline]\fP"

.PP
Definition at line 1715 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename\&.\&.\&. Args> std::pair<\fBiterator\fP, bool> \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::emplace (Args &&\&.\&.\&. args)\fC [inline]\fP"

.PP
Definition at line 1682 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBiterator\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::end ()\fC [inline]\fP"

.PP
Definition at line 1821 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBconst_iterator\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::end () const\fC [inline]\fP"

.PP
Definition at line 1827 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > size_t \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::erase (const \fBkey_type\fP & key)\fC [inline]\fP"

.PP
Definition at line 1861 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBiterator\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::erase (\fBconst_iterator\fP pos)\fC [inline]\fP"

.PP
Definition at line 1836 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBiterator\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::erase (\fBiterator\fP pos)\fC [inline]\fP"

.PP
Definition at line 1844 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBiterator\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::find (const \fBkey_type\fP & key)\fC [inline]\fP"

.PP
Definition at line 1782 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBconst_iterator\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::find (const \fBkey_type\fP & key) const\fC [inline]\fP"

.PP
Definition at line 1760 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename OtherKey , typename Self_  = Self> std::enable_if<Self_::is_transparent, \fBiterator\fP>::type \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::find (const OtherKey & key)\fC [inline]\fP"

.PP
Definition at line 1796 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename OtherKey , typename Self_  = Self> std::enable_if<Self_::is_transparent, \fBconst_iterator\fP>::type \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::find (const OtherKey & key) const\fC [inline]\fP"

.PP
Definition at line 1776 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename OtherKey > \fBiterator\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::find (const OtherKey & key, \fBis_transparent_tag\fP)\fC [inline]\fP"

.PP
Definition at line 1789 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename OtherKey > \fBconst_iterator\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::find (const OtherKey & key, \fBis_transparent_tag\fP) const\fC [inline]\fP"

.PP
Definition at line 1767 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > std::pair<\fBiterator\fP, bool> \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::insert (const \fBvalue_type\fP & keyval)\fC [inline]\fP"

.PP
Definition at line 1694 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename Iter > void \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::insert (Iter first, Iter last)\fC [inline]\fP"

.PP
Definition at line 1674 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > std::pair<\fBiterator\fP, bool> \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::insert (\fBvalue_type\fP && keyval)\fC [inline]\fP"

.PP
Definition at line 1699 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > float \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::load_factor () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 1924 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > float \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::max_load_factor () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 1918 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBsize_type\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::max_size () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 1908 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > bool \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::operator!= (const \fBTable\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual > & other) const\fC [inline]\fP"

.PP
Definition at line 1656 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBTable\fP& \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::operator= (\fBTable\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual > && o)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 1497 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBTable\fP& \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::operator= (\fBTable\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual > const & o)\fC [inline]\fP"

.PP
Definition at line 1550 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > bool \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::operator== (const \fBTable\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual > & other) const\fC [inline]\fP"

.PP
Definition at line 1642 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename Q  = mapped_type> std::enable_if<!std::is_void<Q>::value, Q&>::type \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::operator[] (const \fBkey_type\fP & key)\fC [inline]\fP"

.PP
Definition at line 1662 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > template<typename Q  = mapped_type> std::enable_if<!std::is_void<Q>::value, Q&>::type \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::operator[] (\fBkey_type\fP && key)\fC [inline]\fP"

.PP
Definition at line 1668 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > void \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::rehash (size_t c)\fC [inline]\fP"

.PP
Definition at line 1883 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > void \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::reserve (size_t c)\fC [inline]\fP"

.PP
Definition at line 1889 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::ROBIN_HOOD (NODISCARD) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 1913 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::ROBIN_HOOD (NODISCARD) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 1934 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::ROBIN_HOOD (NODISCARD) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 1943 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::ROBIN_HOOD (NODISCARD) const\fC [inline]\fP"

.PP
Definition at line 1956 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::ROBIN_HOOD (NODISCARD) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 1929 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > \fBsize_type\fP \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::size () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 1903 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > void \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::swap (\fBTable\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual > & o)\fC [inline]\fP"

.PP
Definition at line 1608 of file robin_hood\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > constexpr bool \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::is_flat = IsFlat\fC [static]\fP, \fC [constexpr]\fP"

.PP
Definition at line 888 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > constexpr bool \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::is_map = !std::is_void<T>::value\fC [static]\fP, \fC [constexpr]\fP"

.PP
Definition at line 889 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > constexpr bool \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::is_set = !\fBis_map\fP\fC [static]\fP, \fC [constexpr]\fP"

.PP
Definition at line 890 of file robin_hood\&.h\&.
.SS "template<bool IsFlat, size_t MaxLoadFactor100, typename Key , typename T , typename Hash , typename KeyEqual > constexpr bool \fBrobin_hood::detail::Table\fP< IsFlat, MaxLoadFactor100, Key, T, Hash, KeyEqual >::is_transparent\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
        has_is_transparent<Hash>::value && has_is_transparent<KeyEqual>::value
.fi
.PP
Definition at line 891 of file robin_hood\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LRez from the source code\&.
